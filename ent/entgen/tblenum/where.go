// Code generated by ent, DO NOT EDIT.

package tblenum

import (
	"rr-backend/ent/entgen/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldLTE(FieldID, id))
}

// CreatedBy applies equality check predicate on the "CreatedBy" field. It's identical to CreatedByEQ.
func CreatedBy(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldEQ(FieldCreatedBy, v))
}

// UpdatedBy applies equality check predicate on the "UpdatedBy" field. It's identical to UpdatedByEQ.
func UpdatedBy(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldEQ(FieldUpdatedBy, v))
}

// DeletedBy applies equality check predicate on the "DeletedBy" field. It's identical to DeletedByEQ.
func DeletedBy(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldEQ(FieldDeletedBy, v))
}

// IP applies equality check predicate on the "IP" field. It's identical to IPEQ.
func IP(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldEQ(FieldIP, v))
}

// UserAgent applies equality check predicate on the "UserAgent" field. It's identical to UserAgentEQ.
func UserAgent(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldEQ(FieldUserAgent, v))
}

// CreatedAt applies equality check predicate on the "CreatedAt" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "UpdatedAt" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldEQ(FieldUpdatedAt, v))
}

// DeletedAt applies equality check predicate on the "DeletedAt" field. It's identical to DeletedAtEQ.
func DeletedAt(v time.Time) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldEQ(FieldDeletedAt, v))
}

// Code applies equality check predicate on the "Code" field. It's identical to CodeEQ.
func Code(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldEQ(FieldCode, v))
}

// CodeType applies equality check predicate on the "CodeType" field. It's identical to CodeTypeEQ.
func CodeType(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldEQ(FieldCodeType, v))
}

// DisplayText applies equality check predicate on the "DisplayText" field. It's identical to DisplayTextEQ.
func DisplayText(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldEQ(FieldDisplayText, v))
}

// CreatedByEQ applies the EQ predicate on the "CreatedBy" field.
func CreatedByEQ(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldEQ(FieldCreatedBy, v))
}

// CreatedByNEQ applies the NEQ predicate on the "CreatedBy" field.
func CreatedByNEQ(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldNEQ(FieldCreatedBy, v))
}

// CreatedByIn applies the In predicate on the "CreatedBy" field.
func CreatedByIn(vs ...string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldIn(FieldCreatedBy, vs...))
}

// CreatedByNotIn applies the NotIn predicate on the "CreatedBy" field.
func CreatedByNotIn(vs ...string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldNotIn(FieldCreatedBy, vs...))
}

// CreatedByGT applies the GT predicate on the "CreatedBy" field.
func CreatedByGT(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldGT(FieldCreatedBy, v))
}

// CreatedByGTE applies the GTE predicate on the "CreatedBy" field.
func CreatedByGTE(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldGTE(FieldCreatedBy, v))
}

// CreatedByLT applies the LT predicate on the "CreatedBy" field.
func CreatedByLT(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldLT(FieldCreatedBy, v))
}

// CreatedByLTE applies the LTE predicate on the "CreatedBy" field.
func CreatedByLTE(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldLTE(FieldCreatedBy, v))
}

// CreatedByContains applies the Contains predicate on the "CreatedBy" field.
func CreatedByContains(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldContains(FieldCreatedBy, v))
}

// CreatedByHasPrefix applies the HasPrefix predicate on the "CreatedBy" field.
func CreatedByHasPrefix(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldHasPrefix(FieldCreatedBy, v))
}

// CreatedByHasSuffix applies the HasSuffix predicate on the "CreatedBy" field.
func CreatedByHasSuffix(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldHasSuffix(FieldCreatedBy, v))
}

// CreatedByIsNil applies the IsNil predicate on the "CreatedBy" field.
func CreatedByIsNil() predicate.TblEnum {
	return predicate.TblEnum(sql.FieldIsNull(FieldCreatedBy))
}

// CreatedByNotNil applies the NotNil predicate on the "CreatedBy" field.
func CreatedByNotNil() predicate.TblEnum {
	return predicate.TblEnum(sql.FieldNotNull(FieldCreatedBy))
}

// CreatedByEqualFold applies the EqualFold predicate on the "CreatedBy" field.
func CreatedByEqualFold(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldEqualFold(FieldCreatedBy, v))
}

// CreatedByContainsFold applies the ContainsFold predicate on the "CreatedBy" field.
func CreatedByContainsFold(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldContainsFold(FieldCreatedBy, v))
}

// UpdatedByEQ applies the EQ predicate on the "UpdatedBy" field.
func UpdatedByEQ(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldEQ(FieldUpdatedBy, v))
}

// UpdatedByNEQ applies the NEQ predicate on the "UpdatedBy" field.
func UpdatedByNEQ(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldNEQ(FieldUpdatedBy, v))
}

// UpdatedByIn applies the In predicate on the "UpdatedBy" field.
func UpdatedByIn(vs ...string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldIn(FieldUpdatedBy, vs...))
}

// UpdatedByNotIn applies the NotIn predicate on the "UpdatedBy" field.
func UpdatedByNotIn(vs ...string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldNotIn(FieldUpdatedBy, vs...))
}

// UpdatedByGT applies the GT predicate on the "UpdatedBy" field.
func UpdatedByGT(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldGT(FieldUpdatedBy, v))
}

// UpdatedByGTE applies the GTE predicate on the "UpdatedBy" field.
func UpdatedByGTE(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldGTE(FieldUpdatedBy, v))
}

// UpdatedByLT applies the LT predicate on the "UpdatedBy" field.
func UpdatedByLT(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldLT(FieldUpdatedBy, v))
}

// UpdatedByLTE applies the LTE predicate on the "UpdatedBy" field.
func UpdatedByLTE(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldLTE(FieldUpdatedBy, v))
}

// UpdatedByContains applies the Contains predicate on the "UpdatedBy" field.
func UpdatedByContains(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldContains(FieldUpdatedBy, v))
}

// UpdatedByHasPrefix applies the HasPrefix predicate on the "UpdatedBy" field.
func UpdatedByHasPrefix(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldHasPrefix(FieldUpdatedBy, v))
}

// UpdatedByHasSuffix applies the HasSuffix predicate on the "UpdatedBy" field.
func UpdatedByHasSuffix(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldHasSuffix(FieldUpdatedBy, v))
}

// UpdatedByIsNil applies the IsNil predicate on the "UpdatedBy" field.
func UpdatedByIsNil() predicate.TblEnum {
	return predicate.TblEnum(sql.FieldIsNull(FieldUpdatedBy))
}

// UpdatedByNotNil applies the NotNil predicate on the "UpdatedBy" field.
func UpdatedByNotNil() predicate.TblEnum {
	return predicate.TblEnum(sql.FieldNotNull(FieldUpdatedBy))
}

// UpdatedByEqualFold applies the EqualFold predicate on the "UpdatedBy" field.
func UpdatedByEqualFold(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldEqualFold(FieldUpdatedBy, v))
}

// UpdatedByContainsFold applies the ContainsFold predicate on the "UpdatedBy" field.
func UpdatedByContainsFold(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldContainsFold(FieldUpdatedBy, v))
}

// DeletedByEQ applies the EQ predicate on the "DeletedBy" field.
func DeletedByEQ(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldEQ(FieldDeletedBy, v))
}

// DeletedByNEQ applies the NEQ predicate on the "DeletedBy" field.
func DeletedByNEQ(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldNEQ(FieldDeletedBy, v))
}

// DeletedByIn applies the In predicate on the "DeletedBy" field.
func DeletedByIn(vs ...string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldIn(FieldDeletedBy, vs...))
}

// DeletedByNotIn applies the NotIn predicate on the "DeletedBy" field.
func DeletedByNotIn(vs ...string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldNotIn(FieldDeletedBy, vs...))
}

// DeletedByGT applies the GT predicate on the "DeletedBy" field.
func DeletedByGT(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldGT(FieldDeletedBy, v))
}

// DeletedByGTE applies the GTE predicate on the "DeletedBy" field.
func DeletedByGTE(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldGTE(FieldDeletedBy, v))
}

// DeletedByLT applies the LT predicate on the "DeletedBy" field.
func DeletedByLT(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldLT(FieldDeletedBy, v))
}

// DeletedByLTE applies the LTE predicate on the "DeletedBy" field.
func DeletedByLTE(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldLTE(FieldDeletedBy, v))
}

// DeletedByContains applies the Contains predicate on the "DeletedBy" field.
func DeletedByContains(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldContains(FieldDeletedBy, v))
}

// DeletedByHasPrefix applies the HasPrefix predicate on the "DeletedBy" field.
func DeletedByHasPrefix(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldHasPrefix(FieldDeletedBy, v))
}

// DeletedByHasSuffix applies the HasSuffix predicate on the "DeletedBy" field.
func DeletedByHasSuffix(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldHasSuffix(FieldDeletedBy, v))
}

// DeletedByIsNil applies the IsNil predicate on the "DeletedBy" field.
func DeletedByIsNil() predicate.TblEnum {
	return predicate.TblEnum(sql.FieldIsNull(FieldDeletedBy))
}

// DeletedByNotNil applies the NotNil predicate on the "DeletedBy" field.
func DeletedByNotNil() predicate.TblEnum {
	return predicate.TblEnum(sql.FieldNotNull(FieldDeletedBy))
}

// DeletedByEqualFold applies the EqualFold predicate on the "DeletedBy" field.
func DeletedByEqualFold(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldEqualFold(FieldDeletedBy, v))
}

// DeletedByContainsFold applies the ContainsFold predicate on the "DeletedBy" field.
func DeletedByContainsFold(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldContainsFold(FieldDeletedBy, v))
}

// IPEQ applies the EQ predicate on the "IP" field.
func IPEQ(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldEQ(FieldIP, v))
}

// IPNEQ applies the NEQ predicate on the "IP" field.
func IPNEQ(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldNEQ(FieldIP, v))
}

// IPIn applies the In predicate on the "IP" field.
func IPIn(vs ...string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldIn(FieldIP, vs...))
}

// IPNotIn applies the NotIn predicate on the "IP" field.
func IPNotIn(vs ...string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldNotIn(FieldIP, vs...))
}

// IPGT applies the GT predicate on the "IP" field.
func IPGT(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldGT(FieldIP, v))
}

// IPGTE applies the GTE predicate on the "IP" field.
func IPGTE(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldGTE(FieldIP, v))
}

// IPLT applies the LT predicate on the "IP" field.
func IPLT(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldLT(FieldIP, v))
}

// IPLTE applies the LTE predicate on the "IP" field.
func IPLTE(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldLTE(FieldIP, v))
}

// IPContains applies the Contains predicate on the "IP" field.
func IPContains(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldContains(FieldIP, v))
}

// IPHasPrefix applies the HasPrefix predicate on the "IP" field.
func IPHasPrefix(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldHasPrefix(FieldIP, v))
}

// IPHasSuffix applies the HasSuffix predicate on the "IP" field.
func IPHasSuffix(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldHasSuffix(FieldIP, v))
}

// IPIsNil applies the IsNil predicate on the "IP" field.
func IPIsNil() predicate.TblEnum {
	return predicate.TblEnum(sql.FieldIsNull(FieldIP))
}

// IPNotNil applies the NotNil predicate on the "IP" field.
func IPNotNil() predicate.TblEnum {
	return predicate.TblEnum(sql.FieldNotNull(FieldIP))
}

// IPEqualFold applies the EqualFold predicate on the "IP" field.
func IPEqualFold(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldEqualFold(FieldIP, v))
}

// IPContainsFold applies the ContainsFold predicate on the "IP" field.
func IPContainsFold(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldContainsFold(FieldIP, v))
}

// UserAgentEQ applies the EQ predicate on the "UserAgent" field.
func UserAgentEQ(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldEQ(FieldUserAgent, v))
}

// UserAgentNEQ applies the NEQ predicate on the "UserAgent" field.
func UserAgentNEQ(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldNEQ(FieldUserAgent, v))
}

// UserAgentIn applies the In predicate on the "UserAgent" field.
func UserAgentIn(vs ...string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldIn(FieldUserAgent, vs...))
}

// UserAgentNotIn applies the NotIn predicate on the "UserAgent" field.
func UserAgentNotIn(vs ...string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldNotIn(FieldUserAgent, vs...))
}

// UserAgentGT applies the GT predicate on the "UserAgent" field.
func UserAgentGT(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldGT(FieldUserAgent, v))
}

// UserAgentGTE applies the GTE predicate on the "UserAgent" field.
func UserAgentGTE(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldGTE(FieldUserAgent, v))
}

// UserAgentLT applies the LT predicate on the "UserAgent" field.
func UserAgentLT(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldLT(FieldUserAgent, v))
}

// UserAgentLTE applies the LTE predicate on the "UserAgent" field.
func UserAgentLTE(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldLTE(FieldUserAgent, v))
}

// UserAgentContains applies the Contains predicate on the "UserAgent" field.
func UserAgentContains(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldContains(FieldUserAgent, v))
}

// UserAgentHasPrefix applies the HasPrefix predicate on the "UserAgent" field.
func UserAgentHasPrefix(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldHasPrefix(FieldUserAgent, v))
}

// UserAgentHasSuffix applies the HasSuffix predicate on the "UserAgent" field.
func UserAgentHasSuffix(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldHasSuffix(FieldUserAgent, v))
}

// UserAgentIsNil applies the IsNil predicate on the "UserAgent" field.
func UserAgentIsNil() predicate.TblEnum {
	return predicate.TblEnum(sql.FieldIsNull(FieldUserAgent))
}

// UserAgentNotNil applies the NotNil predicate on the "UserAgent" field.
func UserAgentNotNil() predicate.TblEnum {
	return predicate.TblEnum(sql.FieldNotNull(FieldUserAgent))
}

// UserAgentEqualFold applies the EqualFold predicate on the "UserAgent" field.
func UserAgentEqualFold(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldEqualFold(FieldUserAgent, v))
}

// UserAgentContainsFold applies the ContainsFold predicate on the "UserAgent" field.
func UserAgentContainsFold(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldContainsFold(FieldUserAgent, v))
}

// CreatedAtEQ applies the EQ predicate on the "CreatedAt" field.
func CreatedAtEQ(v time.Time) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "CreatedAt" field.
func CreatedAtNEQ(v time.Time) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "CreatedAt" field.
func CreatedAtIn(vs ...time.Time) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "CreatedAt" field.
func CreatedAtNotIn(vs ...time.Time) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "CreatedAt" field.
func CreatedAtGT(v time.Time) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "CreatedAt" field.
func CreatedAtGTE(v time.Time) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "CreatedAt" field.
func CreatedAtLT(v time.Time) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "CreatedAt" field.
func CreatedAtLTE(v time.Time) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "UpdatedAt" field.
func UpdatedAtEQ(v time.Time) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "UpdatedAt" field.
func UpdatedAtNEQ(v time.Time) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "UpdatedAt" field.
func UpdatedAtIn(vs ...time.Time) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "UpdatedAt" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "UpdatedAt" field.
func UpdatedAtGT(v time.Time) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "UpdatedAt" field.
func UpdatedAtGTE(v time.Time) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "UpdatedAt" field.
func UpdatedAtLT(v time.Time) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "UpdatedAt" field.
func UpdatedAtLTE(v time.Time) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldLTE(FieldUpdatedAt, v))
}

// DeletedAtEQ applies the EQ predicate on the "DeletedAt" field.
func DeletedAtEQ(v time.Time) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "DeletedAt" field.
func DeletedAtNEQ(v time.Time) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "DeletedAt" field.
func DeletedAtIn(vs ...time.Time) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "DeletedAt" field.
func DeletedAtNotIn(vs ...time.Time) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "DeletedAt" field.
func DeletedAtGT(v time.Time) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "DeletedAt" field.
func DeletedAtGTE(v time.Time) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "DeletedAt" field.
func DeletedAtLT(v time.Time) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "DeletedAt" field.
func DeletedAtLTE(v time.Time) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldLTE(FieldDeletedAt, v))
}

// DeletedAtIsNil applies the IsNil predicate on the "DeletedAt" field.
func DeletedAtIsNil() predicate.TblEnum {
	return predicate.TblEnum(sql.FieldIsNull(FieldDeletedAt))
}

// DeletedAtNotNil applies the NotNil predicate on the "DeletedAt" field.
func DeletedAtNotNil() predicate.TblEnum {
	return predicate.TblEnum(sql.FieldNotNull(FieldDeletedAt))
}

// CodeEQ applies the EQ predicate on the "Code" field.
func CodeEQ(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldEQ(FieldCode, v))
}

// CodeNEQ applies the NEQ predicate on the "Code" field.
func CodeNEQ(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldNEQ(FieldCode, v))
}

// CodeIn applies the In predicate on the "Code" field.
func CodeIn(vs ...string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldIn(FieldCode, vs...))
}

// CodeNotIn applies the NotIn predicate on the "Code" field.
func CodeNotIn(vs ...string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldNotIn(FieldCode, vs...))
}

// CodeGT applies the GT predicate on the "Code" field.
func CodeGT(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldGT(FieldCode, v))
}

// CodeGTE applies the GTE predicate on the "Code" field.
func CodeGTE(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldGTE(FieldCode, v))
}

// CodeLT applies the LT predicate on the "Code" field.
func CodeLT(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldLT(FieldCode, v))
}

// CodeLTE applies the LTE predicate on the "Code" field.
func CodeLTE(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldLTE(FieldCode, v))
}

// CodeContains applies the Contains predicate on the "Code" field.
func CodeContains(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldContains(FieldCode, v))
}

// CodeHasPrefix applies the HasPrefix predicate on the "Code" field.
func CodeHasPrefix(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldHasPrefix(FieldCode, v))
}

// CodeHasSuffix applies the HasSuffix predicate on the "Code" field.
func CodeHasSuffix(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldHasSuffix(FieldCode, v))
}

// CodeEqualFold applies the EqualFold predicate on the "Code" field.
func CodeEqualFold(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldEqualFold(FieldCode, v))
}

// CodeContainsFold applies the ContainsFold predicate on the "Code" field.
func CodeContainsFold(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldContainsFold(FieldCode, v))
}

// CodeTypeEQ applies the EQ predicate on the "CodeType" field.
func CodeTypeEQ(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldEQ(FieldCodeType, v))
}

// CodeTypeNEQ applies the NEQ predicate on the "CodeType" field.
func CodeTypeNEQ(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldNEQ(FieldCodeType, v))
}

// CodeTypeIn applies the In predicate on the "CodeType" field.
func CodeTypeIn(vs ...string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldIn(FieldCodeType, vs...))
}

// CodeTypeNotIn applies the NotIn predicate on the "CodeType" field.
func CodeTypeNotIn(vs ...string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldNotIn(FieldCodeType, vs...))
}

// CodeTypeGT applies the GT predicate on the "CodeType" field.
func CodeTypeGT(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldGT(FieldCodeType, v))
}

// CodeTypeGTE applies the GTE predicate on the "CodeType" field.
func CodeTypeGTE(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldGTE(FieldCodeType, v))
}

// CodeTypeLT applies the LT predicate on the "CodeType" field.
func CodeTypeLT(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldLT(FieldCodeType, v))
}

// CodeTypeLTE applies the LTE predicate on the "CodeType" field.
func CodeTypeLTE(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldLTE(FieldCodeType, v))
}

// CodeTypeContains applies the Contains predicate on the "CodeType" field.
func CodeTypeContains(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldContains(FieldCodeType, v))
}

// CodeTypeHasPrefix applies the HasPrefix predicate on the "CodeType" field.
func CodeTypeHasPrefix(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldHasPrefix(FieldCodeType, v))
}

// CodeTypeHasSuffix applies the HasSuffix predicate on the "CodeType" field.
func CodeTypeHasSuffix(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldHasSuffix(FieldCodeType, v))
}

// CodeTypeEqualFold applies the EqualFold predicate on the "CodeType" field.
func CodeTypeEqualFold(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldEqualFold(FieldCodeType, v))
}

// CodeTypeContainsFold applies the ContainsFold predicate on the "CodeType" field.
func CodeTypeContainsFold(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldContainsFold(FieldCodeType, v))
}

// DisplayTextEQ applies the EQ predicate on the "DisplayText" field.
func DisplayTextEQ(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldEQ(FieldDisplayText, v))
}

// DisplayTextNEQ applies the NEQ predicate on the "DisplayText" field.
func DisplayTextNEQ(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldNEQ(FieldDisplayText, v))
}

// DisplayTextIn applies the In predicate on the "DisplayText" field.
func DisplayTextIn(vs ...string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldIn(FieldDisplayText, vs...))
}

// DisplayTextNotIn applies the NotIn predicate on the "DisplayText" field.
func DisplayTextNotIn(vs ...string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldNotIn(FieldDisplayText, vs...))
}

// DisplayTextGT applies the GT predicate on the "DisplayText" field.
func DisplayTextGT(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldGT(FieldDisplayText, v))
}

// DisplayTextGTE applies the GTE predicate on the "DisplayText" field.
func DisplayTextGTE(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldGTE(FieldDisplayText, v))
}

// DisplayTextLT applies the LT predicate on the "DisplayText" field.
func DisplayTextLT(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldLT(FieldDisplayText, v))
}

// DisplayTextLTE applies the LTE predicate on the "DisplayText" field.
func DisplayTextLTE(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldLTE(FieldDisplayText, v))
}

// DisplayTextContains applies the Contains predicate on the "DisplayText" field.
func DisplayTextContains(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldContains(FieldDisplayText, v))
}

// DisplayTextHasPrefix applies the HasPrefix predicate on the "DisplayText" field.
func DisplayTextHasPrefix(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldHasPrefix(FieldDisplayText, v))
}

// DisplayTextHasSuffix applies the HasSuffix predicate on the "DisplayText" field.
func DisplayTextHasSuffix(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldHasSuffix(FieldDisplayText, v))
}

// DisplayTextEqualFold applies the EqualFold predicate on the "DisplayText" field.
func DisplayTextEqualFold(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldEqualFold(FieldDisplayText, v))
}

// DisplayTextContainsFold applies the ContainsFold predicate on the "DisplayText" field.
func DisplayTextContainsFold(v string) predicate.TblEnum {
	return predicate.TblEnum(sql.FieldContainsFold(FieldDisplayText, v))
}

// HasInitialEnum applies the HasEdge predicate on the "InitialEnum" edge.
func HasInitialEnum() predicate.TblEnum {
	return predicate.TblEnum(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2O, false, InitialEnumTable, InitialEnumColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasInitialEnumWith applies the HasEdge predicate on the "InitialEnum" edge with a given conditions (other predicates).
func HasInitialEnumWith(preds ...predicate.TblGarageOwner) predicate.TblEnum {
	return predicate.TblEnum(func(s *sql.Selector) {
		step := newInitialEnumStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.TblEnum) predicate.TblEnum {
	return predicate.TblEnum(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.TblEnum) predicate.TblEnum {
	return predicate.TblEnum(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.TblEnum) predicate.TblEnum {
	return predicate.TblEnum(sql.NotPredicates(p))
}
