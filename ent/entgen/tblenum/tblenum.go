// Code generated by ent, DO NOT EDIT.

package tblenum

import (
	"time"

	"entgo.io/ent"
	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

const (
	// Label holds the string label denoting the tblenum type in the database.
	Label = "tbl_enum"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedBy holds the string denoting the createdby field in the database.
	FieldCreatedBy = "CreatedBy"
	// FieldUpdatedBy holds the string denoting the updatedby field in the database.
	FieldUpdatedBy = "UpdatedBy"
	// FieldDeletedBy holds the string denoting the deletedby field in the database.
	FieldDeletedBy = "DeletedBy"
	// FieldIP holds the string denoting the ip field in the database.
	FieldIP = "IP"
	// FieldUserAgent holds the string denoting the useragent field in the database.
	FieldUserAgent = "UserAgent"
	// FieldCreatedAt holds the string denoting the createdat field in the database.
	FieldCreatedAt = "CreatedAt"
	// FieldUpdatedAt holds the string denoting the updatedat field in the database.
	FieldUpdatedAt = "UpdatedAt"
	// FieldDeletedAt holds the string denoting the deletedat field in the database.
	FieldDeletedAt = "DeletedAt"
	// FieldCode holds the string denoting the code field in the database.
	FieldCode = "Code"
	// FieldCodeType holds the string denoting the codetype field in the database.
	FieldCodeType = "CodeType"
	// FieldDisplayText holds the string denoting the displaytext field in the database.
	FieldDisplayText = "DisplayText"
	// EdgeInitialEnum holds the string denoting the initialenum edge name in mutations.
	EdgeInitialEnum = "InitialEnum"
	// TblGarageOwnerFieldID holds the string denoting the ID field of the TblGarageOwner.
	TblGarageOwnerFieldID = "Id_ulid"
	// Table holds the table name of the tblenum in the database.
	Table = "Tbl_Enum"
	// InitialEnumTable is the table that holds the InitialEnum relation/edge.
	InitialEnumTable = "Tbl_GarageOwner"
	// InitialEnumInverseTable is the table name for the TblGarageOwner entity.
	// It exists in this package in order to avoid circular dependency with the "tblgarageowner" package.
	InitialEnumInverseTable = "Tbl_GarageOwner"
	// InitialEnumColumn is the table column denoting the InitialEnum relation/edge.
	InitialEnumColumn = "Initial"
)

// Columns holds all SQL columns for tblenum fields.
var Columns = []string{
	FieldID,
	FieldCreatedBy,
	FieldUpdatedBy,
	FieldDeletedBy,
	FieldIP,
	FieldUserAgent,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldCode,
	FieldCodeType,
	FieldDisplayText,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "rr-backend/ent/entgen/runtime"
var (
	Hooks        [4]ent.Hook
	Interceptors [1]ent.Interceptor
	// CreatedByValidator is a validator for the "CreatedBy" field. It is called by the builders before save.
	CreatedByValidator func(string) error
	// UpdatedByValidator is a validator for the "UpdatedBy" field. It is called by the builders before save.
	UpdatedByValidator func(string) error
	// DeletedByValidator is a validator for the "DeletedBy" field. It is called by the builders before save.
	DeletedByValidator func(string) error
	// DefaultCreatedAt holds the default value on creation for the "CreatedAt" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "UpdatedAt" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "UpdatedAt" field.
	UpdateDefaultUpdatedAt func() time.Time
	// CodeValidator is a validator for the "Code" field. It is called by the builders before save.
	CodeValidator func(string) error
	// CodeTypeValidator is a validator for the "CodeType" field. It is called by the builders before save.
	CodeTypeValidator func(string) error
	// DisplayTextValidator is a validator for the "DisplayText" field. It is called by the builders before save.
	DisplayTextValidator func(string) error
)

// OrderOption defines the ordering options for the TblEnum queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByCreatedBy orders the results by the CreatedBy field.
func ByCreatedBy(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedBy, opts...).ToFunc()
}

// ByUpdatedBy orders the results by the UpdatedBy field.
func ByUpdatedBy(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdatedBy, opts...).ToFunc()
}

// ByDeletedBy orders the results by the DeletedBy field.
func ByDeletedBy(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDeletedBy, opts...).ToFunc()
}

// ByIP orders the results by the IP field.
func ByIP(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldIP, opts...).ToFunc()
}

// ByUserAgent orders the results by the UserAgent field.
func ByUserAgent(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUserAgent, opts...).ToFunc()
}

// ByCreatedAt orders the results by the CreatedAt field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}

// ByUpdatedAt orders the results by the UpdatedAt field.
func ByUpdatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdatedAt, opts...).ToFunc()
}

// ByDeletedAt orders the results by the DeletedAt field.
func ByDeletedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDeletedAt, opts...).ToFunc()
}

// ByCode orders the results by the Code field.
func ByCode(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCode, opts...).ToFunc()
}

// ByCodeType orders the results by the CodeType field.
func ByCodeType(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCodeType, opts...).ToFunc()
}

// ByDisplayText orders the results by the DisplayText field.
func ByDisplayText(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDisplayText, opts...).ToFunc()
}

// ByInitialEnumField orders the results by InitialEnum field.
func ByInitialEnumField(field string, opts ...sql.OrderTermOption) OrderOption {
	return func(s *sql.Selector) {
		sqlgraph.OrderByNeighborTerms(s, newInitialEnumStep(), sql.OrderByField(field, opts...))
	}
}
func newInitialEnumStep() *sqlgraph.Step {
	return sqlgraph.NewStep(
		sqlgraph.From(Table, FieldID),
		sqlgraph.To(InitialEnumInverseTable, TblGarageOwnerFieldID),
		sqlgraph.Edge(sqlgraph.O2O, false, InitialEnumTable, InitialEnumColumn),
	)
}
